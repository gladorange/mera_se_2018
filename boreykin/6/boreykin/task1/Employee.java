/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boreykin.task1;

import java.util.Objects;
import java.util.regex.*;

/**
 *
 * @author flyer
 */

public abstract class Employee 
{
    private static final Pattern NAME_DELIMITER = Pattern.compile("[ ]+");
    protected static final Pattern NAME_ALLOWED_SYMBOLS = Pattern.compile("[а-яА-ЯёЁ]+");
    public static final int MIN_NAME_WORDS = 2;
    public static final int MAX_NAME_WORDS = 3;
    
    private String firstName;
    private String secondName;
    private String lastName;
    
    public Employee(String firstName, String secondName, String lastName) throws ForbiddenSymbols
    {
        checkLastName(lastName);
        
        this.firstName = firstName;
        this.secondName = secondName;
        this.lastName = lastName;
    }
    
    public Employee(String name) throws WrongWordNumberInName, ForbiddenSymbols
    {
        String [] fullName;
        String first = "";
        String second = "";
        String last = "";
        
        fullName = NAME_DELIMITER.split(name);
        
        switch(fullName.length)
        {
            case 2:
            {
                first = fullName[0];
                last = fullName[1];
                break;
            }
            case 3:
            {
                first = fullName[0];
                second = fullName[1];
                last = fullName[2];
                break;
            }
            default:
            {
                throw new WrongWordNumberInName(fullName.length);
            }
        }
        
        checkLastName(last);
        
        this.firstName = first;
        this.secondName = second;
        this.lastName = last;
    }
    
    @Override
    public boolean equals(Object e)
    {
        return (e != null)
            && (e instanceof Employee)
            && (((Employee)e).firstName.equals(this.firstName))
            && (((Employee)e).secondName.equals(this.secondName))
            && (((Employee)e).lastName.equals(this.lastName));
    }

    @Override
    public int hashCode() 
    {
        // Code of this method has been generated by IDE.
        int hash = 7;
        hash = 17 * hash + Objects.hashCode(this.firstName);
        hash = 17 * hash + Objects.hashCode(this.secondName);
        hash = 17 * hash + Objects.hashCode(this.lastName);
        return hash;
    }
    
    private void checkLastName(String name) throws ForbiddenSymbols
    {
        int groups = 0;
        Matcher mat = NAME_ALLOWED_SYMBOLS.matcher(name);
        
        
        while(mat.find())
        {
           groups++;
        }
        
        if(1 != groups)
        {
            throw new ForbiddenSymbols();
        }
    }
            
    public String getFullName()
    {
        return String.format("%s%s %s",
                firstName,
                "".equals(secondName)? "" : " " + secondName, 
                lastName);
    }
    
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getSecondName() {
        return secondName;
    }

    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
}
